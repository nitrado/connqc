name: CI

# Continuous integration runs whenever a pull request for the main branch
# is created or updated.
on:
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    env:
      GO_VERSION: "1.21"
      GOLANGCI_LINT_VERSION: v1.54.2

    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Install Go
        if: success()
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Here, we simply print the exact go version, to have it as part of the
      # action's output, which might be convenient.
      - name: Print Go version
        run: go version

      # This check makes sure that the `go.mod` and `go.sum` files for Go
      # modules are always up-to-date.
      - name: Verify Go modules
        run: go mod tidy && git status && git --no-pager diff && git diff-index --quiet HEAD --

      # This check runs the linter, which enforces code formatting and quality.
      - name: Run linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          args: --go ${{ env.GO_VERSION }}

      # This check runs all unit tests.
      - name: Verify unit tests
        run: make test

      # Run GoReleaser.
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
